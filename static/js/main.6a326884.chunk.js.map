{"version":3,"sources":["components/Speech.jsx","components/Phrase.jsx","images/lumena.jpg","App.js","reportWebVitals.js","index.js"],"names":["Speech","text","voices","window","speechSynthesis","getVoices","language","find","voice","test","lang","onClick","utterance","SpeechSynthesisUtterance","rate","speak","Phrase","useState","db","Math","floor","random","length","phrase","setPhrase","className","App","src","lumenaFace","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"y6BAGe,SAASA,EAAT,GAA2B,IAAD,EAARC,EAAQ,EAARA,KAEzBC,EAAM,UAAGC,OAAOC,uBAAV,aAAG,EAAwBC,YACjCC,EAAQ,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAQK,MAAK,SAACC,GAAD,MAAW,QAAQC,KAAKD,EAAME,SAa5D,OACE,cAAC,IAAD,CAAcC,QAAS,kBAZX,WACZ,IAAMC,EAAY,IAAIC,yBAEtBD,EAAUX,KAAOA,EACjBW,EAAUF,KAAO,QACjBE,EAAUJ,MAAQF,EAClBM,EAAUE,KAAO,EAEjBX,OAAOC,gBAAgBW,MAAMH,GAIAG,MCdlB,SAASC,IAAU,IAAD,EACDC,mBAASC,EAAGC,KAAKC,MAAMD,KAAKE,SAAWH,EAAGI,UADzC,mBACvBC,EADuB,KACfC,EADe,KAE/B,OACE,gCACE,mBAAGC,UAAU,cAAb,SAA4BF,EAAOA,SAEnC,sBAAKE,UAAU,eAAf,UACE,cAACzB,EAAD,CAAQC,KAAMsB,EAAOA,SACrB,cAAC,IAAD,CAAWZ,QAAS,kBAAMa,EAAUN,EAAGC,KAAKC,MAAMD,KAAKE,SAAWH,EAAGI,mBCd9D,UAA0B,mC,YCkB1BI,MAZf,WACE,OACE,sBAAKD,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKE,IAAKC,EAAYH,UAAU,WAAWI,IAAI,SAC/C,yGAEF,cAACb,EAAD,QCDSc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6a326884.chunk.js","sourcesContent":["import React from 'react'\nimport { BiVolumeFull } from 'react-icons/bi'\n\nexport default function Speech({ text }) {\n\n  const voices = window.speechSynthesis?.getVoices()\n  const language = voices?.find((voice) => /pt-BR/.test(voice.lang))\n\n  const speak = () => {\n    const utterance = new SpeechSynthesisUtterance()\n\n    utterance.text = text\n    utterance.lang = 'pt-BR'\n    utterance.voice = language\n    utterance.rate = 1\n\n    window.speechSynthesis.speak(utterance)\n  }\n\n  return (\n    <BiVolumeFull onClick={() => speak()} />\n  )\n}\n","import React, { useState } from 'react'\nimport db from '../db/db.json'\nimport { BiRefresh } from 'react-icons/bi'\n\nimport Speech from './Speech'\n\nexport default function Phrase() {\n  const [ phrase, setPhrase ] = useState(db[Math.floor(Math.random() * db.length)])\n  return (\n    <div>\n      <p className=\"Phrase-text\">{phrase.phrase}</p>\n\n      <div className=\"Phrase-icons\">\n        <Speech text={phrase.phrase} />\n        <BiRefresh onClick={() => setPhrase(db[Math.floor(Math.random() * db.length)])} />\n      </div>\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/lumena.32a78022.jpg\";","import Phrase from './components/Phrase';\n\nimport lumenaFace from './images/lumena.jpg';\nimport './css/Reset.css';\nimport './css/App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={lumenaFace} className=\"App-logo\" alt=\"logo\" />\n        <h1>Eu sou um rob√¥ praticando frases que aprendi com a Lumena Aleluia</h1>\n      </header>\n      <Phrase />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}